#Назначение: Создает первую стадию сборки
#Детали:
#Использует официальный образ Go версии 1.22
#alpine - легковесная версия Linux (~5MB)
#AS builder - именует эту стадию как "builder" для последующего использования
FROM golang:1.24-alpine AS builder

#Назначение: Установка зависимостей для сборки
#Детали:
#apk - менеджер пакетов Alpine Linux
#add git - устанавливает Git
#--no-cache - не кэширует индекс пакетов (уменьшает размер образа)
RUN apk add --no-cache git

#Назначение: Устанавливает рабочую директорию внутри контейнера
#Детали:
#Все последующие команды будут выполняться в /app
#Автоматически создает директорию, если её нет
WORKDIR /app

#Назначение: Копирует файлы зависимостей
#Детали:
#go.mod и go.sum - файлы, описывающие зависимости Go
#./ - копирует в текущую рабочую директорию (/app)
COPY go.mod go.sum ./
#Назначение: Загружает зависимости приложения
#Детали:
#Аналог команды go mod download на хосте
#Использует кэш Docker для ускорения последующих сборок
RUN go mod download

#Назначение: Копирует весь исходный код
#Детали:
#Первый . - текущая директория на хосте
#Второй . - текущая рабочая директория в контейнере (/app)
#Копирует все файлы, кроме указанных в .dockerignore
COPY . .
COPY config/ ./config/
COPY .env .

#Назначение: Компилирует приложение
#Детали:
#CGO_ENABLED=0 - отключает CGO (создает статический бинарник)
#GOOS=linux - указывает ОС для компиляции
#-o /app/bin/server - путь для выходного бинарника
#./cmd/server - путь к main-пакету
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/bin/server ./cmd/server

#Назначение: Создает финальный образ
#Детали:
#Начинает новую стадию сборки
#Использует чистый образ Alpine (без инструментов компиляции)
#Значительно уменьшает размер финального образа
FROM alpine:latest

#Назначение: Устанавливает SSL-сертификаты
#Детали:
#Необходимо для HTTPS-соединений
#ca-certificates - пакет корневых сертификатов
#--no-cache - уменьшает размер образа
RUN apk --no-cache add ca-certificates

#Назначение: Копирует скомпилированный бинарник
#Детали:
#--from=builder - берет файл из стадии "builder"
#/app/bin/server - путь в стадии builder
#/app/server - путь в финальном образе
COPY --from=builder /app/bin/server /app/server
COPY --from=builder /app/config/ ./config/
COPY --from=builder /app/.env .

#Назначение: Копирует файлы миграций БД
#Детали:
#migrations - директория на хосте с SQL-скриптами
#/app/migrations - целевой путь в контейнере
COPY migrations /app/migrations

#Назначение: Устанавливает рабочую директорию
#Детали:
#Для финального образа
#Команды будут выполняться из /app
WORKDIR /app

#Назначение: Объявляет порт для доступа
 #Детали:
 #Информационная метка (не открывает порт автоматически)
 #Указывает, что приложение слушает порт 8080
EXPOSE 8080

#Назначение: Команда запуска приложения
 #Детали:
 #Выполняется при старте контейнера
 #Запускает скомпилированный бинарник
 #Использует exec-форму (рекомендуется)
CMD ["/app/server"]